apiVersion: v1
kind: Namespace
metadata:
  name: nextjs
---
apiVersion: v1
kind: Service
metadata:
  name: nextjs-blog
  namespace: nextjs
spec:
  selector:
    app.kubernetes.io/instance: nextjs-blog
    app.kubernetes.io/name: nextjs-blog
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextjs-blog
  namespace: nextjs
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nextjs-blog
      app.kubernetes.io/name: nextjs-blog
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: nextjs-blog
        app.kubernetes.io/name: nextjs-blog
    spec:
      imagePullSecrets:
      - name: harborregistrycreds
      containers:
      - name: nextjs-blog
        image: harbor.vthul-it.nl/private/blog@sha256:7cf4226dfd229ef1a5595a2179a6e911918ae5fa3d4300ba8b2c06cfb5874077
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /app/prisma
          name: database
      initContainers:
      - name: blog-init
        image: harbor.vthul-it.nl/private/blog@sha256:7cf4226dfd229ef1a5595a2179a6e911918ae5fa3d4300ba8b2c06cfb5874077
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - >
          if [ ! -f "/new-setup/configured" ]; then 
            mkdir -p /new-setup && 
            cp -r /app/prisma/. /new-setup && 
            touch /new-setup/configured; 
          else
            echo "The blog PVC seems already configured... Skipping";
          fi
        volumeMounts:
        - mountPath: /new-setup
          name: database
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      volumes:
      - name: database
        persistentVolumeClaim:
          claimName: pvc-nextjs-blog
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: cloudflare
  labels:
    app.kubernetes.io/instance: nextjs-blog
    app.kubernetes.io/name: nextjs-blog
  name: blog-ingress
  namespace: nextjs
spec:
  ingressClassName: traefik
  rules:
  - host: blog.vthul-it.nl
    http:
      paths:
      - backend:
          service:
            name: nextjs-blog
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - blog.vthul-it.nl
    secretName: blog-ingress
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io
    volume.kubernetes.io/storage-provisioner: driver.longhorn.io
  labels:
    app.kubernetes.io/instance: nextjs-blog
    app.kubernetes.io/name: nextjs-blog
  name: pvc-nextjs-blog
  namespace: nextjs
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn-ssd
